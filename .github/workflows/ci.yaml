name: CI Workflow
on:
  # Run this workflow every time a new commit pushed to upstream/fork repository.
  # Run workflow on fork repository will help contributors find and resolve issues before sending a PR.
  pull_request:
#  push:
#    # Exclude branches created by Dependabot to avoid triggering current workflow
#    # for PRs initiated by Dependabot.
#    branches-ignore:
#      - 'dependabot/**'
permissions:
  contents: read  # for actions/checkout to fetch code  

env:
  REGISTRY: docker.io
  IMAGE_REPO: ${{ secrets.IMAGE_REPO || 'projecthami/hami' }}
  IMAGE_ROOT_PATH: docker
  BUILD_PLATFORM: linux/arm64,linux/amd64
  REGISTER_USER: ${{ github.actor }}
  REGISTER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
#  lint:
#    name: lint
#    runs-on: ubuntu-22.04
#    steps:
#      - name: checkout code
#        uses: actions/checkout@v4
#      - name: install Go
#        uses: actions/setup-go@v5
#        with:
#          go-version: "1.21"
#      - name: verify license
#        run: hack/verify-license.sh
#      - name: go tidy
#        run: make tidy
#      - name: lint
#        run: make lint
#      - name: import alias
#        run: hack/verify-import-aliases.sh
#  test:
#    name: Unit test
#    needs: lint # rely on lint successful completion
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Checkout submodule
#        uses: Mushus/checkout-submodule@v1.0.1
#        with:
#          basePath: # optional, default is .
#          submodulePath: libvgpu
#      - name: Install Go
#        uses: actions/setup-go@v5
#        with:
#          go-version: "1.21"
#      - run: make tidy
#      - run: make test
#      - name: Upload coverage to Codecov
#        # Prevent running from the forked repository that doesn't need to upload coverage.
#        # In addition, running on the forked repository would fail as missing the necessary secret.
#        if: ${{ github.repository == 'Project-HAMi/HAMi' }}
#        uses: codecov/codecov-action@v5
#        with:
#          # Even though token upload token is not required for public repos,
#          # but adding a token might increase successful uploads as per:
#          # https://community.codecov.com/t/upload-issues-unable-to-locate-build-via-github-actions-api/3954
#          token: ${{secrets.CODECOV_TOKEN}}
#          files: ./_output/coverage/coverage.out
#          flags: unittests
#          fail_ci_if_error: false
#          verbose: true

  build:
    name: compile
    runs-on: ubuntu-latest
#    needs: test # rely on test successful completion
    steps:
      - uses: actions/checkout@master
      - name: Free disk space
        # https://github.com/actions/virtual-environments/issues/709
        run: |
          echo "=========original CI disk space"
          df -h
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "=========after clean up, the left CI disk space"
          df -h

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout submodule
        uses: Mushus/checkout-submodule@v1.0.1
        with:
          basePath: # optional, default is .
          submodulePath: libvgpu

      - name: Show path
        run: |
          pwd 
          ls -l
          ls /home/runner/work/HAMi/HAMi/.github/workflows

      - name: Get version
        id: version
        run: |
          VERSION=$(git rev-parse --short HEAD)
          echo "hello world"
          echo $VERSION > version.txt

      - name: Verify version file exists
        run: |
          if [ ! -f version.txt ]; then
            echo "Error: version.txt not found!"
            exit 1
          fi
          echo "version.txt found, proceeding with upload."



      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

      - name: Confirm artifact upload
        run: |
          echo "Artifact version uploaded successfully"

      - name: Download artifact
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: version
          path: version.txt

      - name: Print version
        run: cat version.txt